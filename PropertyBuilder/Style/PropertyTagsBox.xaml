<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:PropertyBuilder.Controls"
                    xmlns:custom="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    mc:Ignorable="d">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="OptionsDropDown.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <DataTemplate x:Key="PropertyTagStyle">
        <Grid Height="21.667">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="10" />
                <ColumnDefinition Width="20" />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>

            <TextBox x:Name="textBox"
                     Margin="2,4,2,4"
                     BorderBrush="{StaticResource AccentColorBrush}"
                     BorderThickness="0,0,0,1"
                     MaxLength="32"
                     Style="{DynamicResource TagTextStyle}"
                     Text="{Binding Name,
                                    Mode=TwoWay,
                                    UpdateSourceTrigger=PropertyChanged}"
                     TextWrapping="Wrap" />
            <Rectangle Grid.Column="0"
                       Grid.ColumnSpan="3"
                       Margin="0,0,0,0"
                       RadiusX="0"
                       RadiusY="0"
                       Stroke="{StaticResource AccentColorBrush}" />
            <TextBlock x:Name="T"
                       Grid.Column="1"
                       Height="Auto"
                       Margin="0,-1,0,0"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Top"
                       FontSize="16"
                       Foreground="{StaticResource AccentColorBrush}"
                       Text="{Binding TypeAbbreviature,
                                      Mode=OneWay,
                                      UpdateSourceTrigger=PropertyChanged}"
                       TextWrapping="Wrap"
                       d:LayoutOverrides="Width" />

            <controls:PropertyTagSettingsDropDown Grid.Column="2"
                                                  Margin="2"
                                                  IsTabStop="False"
                                                  Style="{StaticResource FilterOptionsDropDown}" />

            <Button x:Name="CloseButton"
                    Grid.Column="3"
                    Height="Auto"
                    Margin="-2,0,0,0"
                    VerticalAlignment="Stretch"
                    Panel.ZIndex="1"
                    Background="{x:Null}"
                    BorderThickness="0"
                    Command="{Binding ClosePropertyCommand}"
                    Style="{DynamicResource CloseButtonStyle}" />
            <Path Grid.Column="3"
                  Width="Auto"
                  Height="Auto"
                  Margin="0"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch"
                  Data="M0.5,0.5 L12.25,0.5 C16.254065,0.50000051 19.5,3.7459362 19.5,7.7500005 L19.5,13.917 C19.5,17.921065 16.254065,21.167 12.25,21.167 L0.5,21.167 z"
                  Fill="{StaticResource AccentColorBrush}"
                  Stretch="Fill"
                  Stroke="{x:Null}" />
        </Grid>
    </DataTemplate>

    <Style x:Key="PropertyTagListBoxStyle" TargetType="{x:Type controls:PropertyTagsBox}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderBrush" Value="{DynamicResource BlackBrush}" />
        <Setter Property="Background" Value="{DynamicResource WhiteBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="ItemTemplate" Value="{StaticResource PropertyTagStyle}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:PropertyTagsBox}">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping" Value="False">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush9}" />
            </Trigger>
            <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="True">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <WrapPanel IsItemsHost="True" Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="custom:ControlsHelper.ContentCharacterCasing" Value="Upper" />
        <Setter Property="custom:ControlsHelper.CornerRadius" Value="3" />
        <!--<Setter Property="MinHeight" Value="15"/>-->
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}" />
        <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}" />
        <Setter Property="Background" Value="{DynamicResource GrayBrush10}" />
        <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="Padding" Value="5,6" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="MouseOverOn">
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="path" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="0" Value="#FFC9B4B4" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="MouseOverOff">
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="path" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="0" Value="White" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="IsPressedOn">
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="path" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="0" Value="#FF1F1F1F" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="IsPressedOff">
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="path" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="0" Value="#FFC9B4B4" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Border x:Name="Background"
                                Background="{TemplateBinding Background}"
                                CornerRadius="{Binding (custom:ControlsHelper.CornerRadius),
                                                       Mode=OneWay,
                                                       RelativeSource={RelativeSource TemplatedParent}}" />
                        <Border x:Name="Border"
                                Background="{x:Null}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{Binding (custom:ControlsHelper.CornerRadius),
                                                       Mode=OneWay,
                                                       RelativeSource={RelativeSource TemplatedParent}}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Border x:Name="DisabledVisualElement"
                                Background="{DynamicResource ControlsDisabledBrush}"
                                CornerRadius="{Binding (custom:ControlsHelper.CornerRadius),
                                                       Mode=OneWay,
                                                       RelativeSource={RelativeSource TemplatedParent}}"
                                IsHitTestVisible="False"
                                Opacity="0"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <custom:ContentControlEx x:Name="PART_ContentPresenter"
                                                 HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                 VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                 Content="{TemplateBinding Content}"
                                                 ContentCharacterCasing="{Binding (custom:ControlsHelper.ContentCharacterCasing),
                                                                                  RelativeSource={RelativeSource TemplatedParent}}"
                                                 ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                 ContentTemplate="{TemplateBinding ContentTemplate}"
                                                 Padding="{TemplateBinding Padding}"
                                                 RecognizesAccessKey="True"
                                                 SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Path x:Name="path"
                              Width="Auto"
                              Height="Auto"
                              Margin="3"
                              Data="F1 M 26.9166,22.1667L 37.9999,33.25L 49.0832,22.1668L 53.8332,26.9168L 42.7499,38L 53.8332,49.0834L 49.0833,53.8334L 37.9999,42.75L 26.9166,53.8334L 22.1666,49.0833L 33.25,38L 22.1667,26.9167L 26.9166,22.1667 Z "
                              Fill="White"
                              Stretch="Fill"
                              d:LayoutOverrides="Width, LeftMargin, RightMargin" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="MouseOverOff_BeginStoryboard" Storyboard="{StaticResource MouseOverOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="MouseOverOn_BeginStoryboard" Storyboard="{StaticResource MouseOverOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="IsPressedOff_BeginStoryboard" Storyboard="{StaticResource IsPressedOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="IsPressedOn_BeginStoryboard" Storyboard="{StaticResource IsPressedOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TagTextStyle" TargetType="{x:Type TextBox}">
        <Setter Property="ContextMenu" Value="{DynamicResource TextBoxMetroContextMenu}" />
        <Setter Property="custom:TextBoxHelper.IsMonitoring" Value="True" />
        <Setter Property="custom:ControlsHelper.ButtonWidth" Value="22" />
        <Setter Property="SelectionBrush" Value="{DynamicResource HighlightBrush}" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource ContentFontSize}" />
        <Setter Property="BorderThickness" Value="1" />
        <!--<Setter Property="MinHeight" Value="26"/>-->
        <!--<Setter Property="IsTabStop" Value="False"></Setter>-->
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}" />
        <Setter Property="custom:ControlsHelper.FocusBorderBrush" Value="{DynamicResource TextBoxFocusBorderBrush}" />
        <Setter Property="custom:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource TextBoxMouseOverBorderBrush}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ValidationErrorTemplate}" />
        <Setter Property="CaretBrush" Value="{DynamicResource BlackBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="EnterGotFocus">
                            <DoubleAnimation Duration="0:0:0.2"
                                             Storyboard.TargetName="PART_Message"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0.2" />
                        </Storyboard>
                        <Storyboard x:Key="ExitGotFocus">
                            <DoubleAnimation Duration="0:0:0.2"
                                             Storyboard.TargetName="PART_Message"
                                             Storyboard.TargetProperty="Opacity" />
                        </Storyboard>
                        <Storyboard x:Key="EnterHasText">
                            <DoubleAnimation Duration="0:0:0.2"
                                             From="0.2"
                                             Storyboard.TargetName="PART_Message"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0" />
                        </Storyboard>
                        <Storyboard x:Key="ExitHasText">
                            <DoubleAnimation Duration="0:0:0.2"
                                             Storyboard.TargetName="PART_Message"
                                             Storyboard.TargetProperty="Opacity" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Border x:Name="Base"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Grid x:Name="PART_InnerGrid" Margin="0,2,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="TextColumn" Width="*" />
                                <ColumnDefinition x:Name="ButtonColumn" Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition x:Name="ButtonRow" Height="*" />
                            </Grid.RowDefinitions>
                            <ContentControl x:Name="PART_FloatingMessageContainer"
                                            Grid.Column="0"
                                            Grid.ColumnSpan="2"
                                            Style="{DynamicResource FloatingMessageContainerStyle}">
                                <TextBlock x:Name="PART_FloatingMessage"
                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                           Foreground="{TemplateBinding Foreground}"
                                           Style="{DynamicResource MetroAutoCollapsingTextBlock}"
                                           Text="{TemplateBinding custom:TextBoxHelper.Watermark}" />
                            </ContentControl>
                            <Button x:Name="PART_ClearText"
                                    Grid.Row="0"
                                    Grid.RowSpan="2"
                                    Grid.Column="1"
                                    Width="{Binding (custom:ControlsHelper.ButtonWidth),
                                                    Mode=OneWay,
                                                    RelativeSource={RelativeSource TemplatedParent}}"
                                    custom:TextBoxHelper.IsClearTextButtonBehaviorEnabled="{Binding (custom:TextBoxHelper.ClearTextButton),
                                                                                                    Mode=OneWay,
                                                                                                    RelativeSource={RelativeSource TemplatedParent}}"
                                    Content="{Binding (custom:TextBoxHelper.ButtonContent),
                                                      Mode=OneWay,
                                                      RelativeSource={RelativeSource TemplatedParent}}"
                                    FontFamily="{Binding (custom:TextBoxHelper.ButtonFontFamily),
                                                         Mode=OneWay,
                                                         RelativeSource={RelativeSource TemplatedParent}}"
                                    FontSize="16"
                                    Foreground="{TemplateBinding Foreground}"
                                    IsTabStop="False"
                                    Style="{DynamicResource ChromelessButtonStyle}">
                                <Button.Visibility>
                                    <Binding Mode="OneWay"
                                             Path="(custom:TextBoxHelper.ClearTextButton)"
                                             RelativeSource="{RelativeSource TemplatedParent}">
                                        <Binding.Converter>
                                            <BooleanToVisibilityConverter />
                                        </Binding.Converter>
                                    </Binding>
                                </Button.Visibility>
                            </Button>
                            <Border x:Name="ReadOnlyVisualElement"
                                    Grid.Row="1"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="2"
                                    Background="{x:Null}"
                                    Opacity="0" />
                            <ScrollViewer x:Name="PART_ContentHost"
                                          Grid.Row="1"
                                          Grid.Column="0"
                                          Margin="0,-3.833,0,0"
                                          VerticalAlignment="Stretch"
                                          Background="{x:Null}"
                                          BorderThickness="0"
                                          IsTabStop="False" />
                            <TextBlock x:Name="PART_Message"
                                       Grid.Row="1"
                                       Grid.Column="0"
                                       Margin="6,2"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       Foreground="{TemplateBinding Foreground}"
                                       IsHitTestVisible="False"
                                       Opacity="0.6"
                                       Padding="{TemplateBinding Padding}"
                                       Text="{TemplateBinding custom:TextBoxHelper.Watermark}"
                                       Visibility="Collapsed" />
                        </Grid>
                        <Border x:Name="DisabledVisualElement"
                                Margin="0,0,0,-3.5"
                                Background="{DynamicResource ControlsDisabledBrush}"
                                BorderBrush="{DynamicResource ControlsDisabledBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                IsHitTestVisible="False"
                                Opacity="0"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Visibility="{Binding (custom:ControlsHelper.DisabledVisualElementVisibility),
                                                     Mode=OneWay,
                                                     RelativeSource={RelativeSource TemplatedParent}}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding (custom:TextBoxHelper.ButtonsAlignment), RelativeSource={RelativeSource Self}}" Value="Left">
                            <Setter TargetName="PART_ClearText" Property="Grid.Column" Value="0" />
                            <Setter TargetName="PART_Message" Property="Grid.Column" Value="1" />
                            <Setter TargetName="TextColumn" Property="Width" Value="Auto" />
                            <Setter TargetName="ButtonColumn" Property="Width" Value="*" />
                            <Setter TargetName="PART_ContentHost" Property="Grid.Column" Value="1" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="">
                            <Setter TargetName="PART_Message" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding (custom:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding (custom:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2"
                                                         Storyboard.TargetName="PART_FloatingMessageContainer"
                                                         Storyboard.TargetProperty="MaxHeight"
                                                         To="15">
                                            <DoubleAnimation.EasingFunction>
                                                <ExponentialEase EasingMode="EaseInOut" Exponent="2" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Duration="0:0:0.2"
                                                         Storyboard.TargetName="PART_FloatingMessageContainer"
                                                         Storyboard.TargetProperty="Opacity" />
                                        <DoubleAnimation Duration="0:0:0.2"
                                                         Storyboard.TargetName="PART_FloatingMessage"
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                                                         To="0">
                                            <DoubleAnimation.EasingFunction>
                                                <ExponentialEase EasingMode="EaseOut" Exponent="2" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2"
                                                         Storyboard.TargetName="PART_FloatingMessageContainer"
                                                         Storyboard.TargetProperty="MaxHeight"
                                                         To="0">
                                            <DoubleAnimation.EasingFunction>
                                                <ExponentialEase EasingMode="EaseInOut" Exponent="2" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Duration="0:0:0.2"
                                                         Storyboard.TargetName="PART_FloatingMessageContainer"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0" />
                                        <DoubleAnimation Duration="0:0:0.2"
                                                         Storyboard.TargetName="PART_FloatingMessage"
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                                                         To="20">
                                            <DoubleAnimation.EasingFunction>
                                                <ExponentialEase EasingMode="EaseIn" Exponent="2" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding (custom:TextBoxHelper.ButtonsAlignment), RelativeSource={RelativeSource Self}}" Value="Right" />
                                <Condition Binding="{Binding (custom:TextBoxHelper.ClearTextButton), RelativeSource={RelativeSource Self}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_ContentHost" Property="Grid.ColumnSpan" Value="2" />
                            <Setter TargetName="PART_Message" Property="Grid.ColumnSpan" Value="2" />
                        </MultiDataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Base" Property="BorderBrush" Value="{Binding (custom:ControlsHelper.MouseOverBorderBrush), RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="DisabledVisualElement" Property="Opacity" Value="0.6" />
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter TargetName="PART_ClearText" Property="IsEnabled" Value="False" />
                            <Setter TargetName="ReadOnlyVisualElement" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Base" Property="BorderBrush" Value="{Binding (custom:ControlsHelper.FocusBorderBrush), RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="PART_FloatingMessage" Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
                            <Setter TargetName="PART_FloatingMessage" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger SourceName="PART_ClearText" Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_ClearText" Property="Background" Value="{DynamicResource GrayBrush8}" />
                            <Setter TargetName="PART_ClearText" Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
                        </Trigger>
                        <Trigger SourceName="PART_ClearText" Property="IsPressed" Value="True">
                            <Setter TargetName="PART_ClearText" Property="Background" Value="{DynamicResource BlackBrush}" />
                            <Setter TargetName="PART_ClearText" Property="Foreground" Value="{DynamicResource WhiteBrush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="custom:TextBoxHelper.HasText" Value="False" />
                                <Condition Property="IsFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2"
                                                         Storyboard.TargetName="PART_Message"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2"
                                                         Storyboard.TargetName="PART_Message"
                                                         Storyboard.TargetProperty="Opacity" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <Trigger Property="custom:TextBoxHelper.HasText" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2"
                                                         From="0.2"
                                                         Storyboard.TargetName="PART_Message"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2"
                                                         Storyboard.TargetName="PART_Message"
                                                         Storyboard.TargetProperty="Opacity" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="custom:TextBoxHelper.IsWaitingForData" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation AutoReverse="True"
                                                         Duration="0:0:2"
                                                         From="0"
                                                         RepeatBehavior="Forever"
                                                         Storyboard.TargetName="Base"
                                                         Storyboard.TargetProperty="(Effect).Opacity"
                                                         To="1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Setter TargetName="Base" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect BlurRadius="10"
                                                      Opacity="0"
                                                      ShadowDepth="0"
                                                      Color="Black" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="custom:TextBoxHelper.IsWaitingForData" Value="False">
                            <Setter TargetName="Base" Property="Effect" Value="{x:Null}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>