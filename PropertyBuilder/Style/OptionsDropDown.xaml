<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    mc:Ignorable="d">

    <Style x:Key="FilterOptionsDropDownToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Padding" Value="3" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid x:Name="ToggleButtonRootGrid">
                        <Border x:Name="PART_Background"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                        <Grid Margin="0">
                            <Grid x:Name="BtnArrowBackground"
                                  Width="Auto"
                                  Margin="0"
                                  Background="Transparent"
                                  d:LayoutOverrides="Width, LeftMargin, RightMargin">
                                <Viewbox Width="Auto"
                                         Height="Auto"
                                         Margin="0"
                                         d:LayoutOverrides="Height, TopMargin, BottomMargin">
                                    <Canvas Width="24" Height="24">
                                        <Path Data="M12,17L7,12H10V8H14V12H17L12,17M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12A10,10 0 0,1 12,2M12,4A8,8 0 0,0 4,12A8,8 0 0,0 12,20A8,8 0 0,0 20,12A8,8 0 0,0 12,4Z" Fill="{DynamicResource AccentColorBrush}" />
                                    </Canvas>
                                </Viewbox>
                            </Grid>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="BtnArrowBackground" Property="IsMouseOver" Value="True">
                            <Setter TargetName="BtnArrowBackground" Property="Background" Value="{DynamicResource GrayBrush5}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter TargetName="BtnArrowBackground" Property="Background" Value="{DynamicResource GrayBrush3}" />
                            <Setter TargetName="PART_Background" Property="Background" Value="{DynamicResource GrayBrush7}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FilterOptionsDropDown" TargetType="{x:Type ComboBox}">
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="controls:ControlsHelper.ButtonWidth" Value="24" />
        <Setter Property="controls:ControlsHelper.FocusBorderBrush" Value="{DynamicResource ComboBoxMouseOverInnerBorderBrush}" />
        <Setter Property="controls:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource TextBoxMouseOverBorderBrush}" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource ContentFontSize}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="ItemContainerStyle" Value="{DynamicResource MetroComboBoxItem}" />
        <Setter Property="MinHeight" Value="12" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <!--  change SnapsToDevicePixels to true to view a better border and validation error  -->
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ValidationErrorTemplate}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid Margin="0">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="FocusedDropDown">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="00:00:00"
                                                                       Storyboard.TargetName="PopupBorder"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <ToggleButton x:Name="PART_DropDownToggle"
                                          Grid.ColumnSpan="3"
                                          Margin="0"
                                          VerticalAlignment="Stretch"
                                          Background="{TemplateBinding Background}"
                                          BorderBrush="{x:Null}"
                                          BorderThickness="0"
                                          Foreground="{TemplateBinding Foreground}"
                                          IsChecked="{Binding IsDropDownOpen,
                                                              Mode=TwoWay,
                                                              RelativeSource={RelativeSource TemplatedParent}}"
                                          KeyboardNavigation.IsTabStop="False"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          Style="{DynamicResource FilterOptionsDropDownToggleButtonStyle}" />
                        </Grid>

                        <Border x:Name="FocusBorder"
                                Grid.ColumnSpan="3"
                                Background="{x:Null}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{Binding (controls:ControlsHelper.CornerRadius),
                                                       Mode=OneWay,
                                                       RelativeSource={RelativeSource TemplatedParent}}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Visibility="Collapsed" />
                        <Border x:Name="DisabledVisualElement"
                                Grid.ColumnSpan="3"
                                Background="{DynamicResource ControlsDisabledBrush}"
                                BorderBrush="{DynamicResource ControlsDisabledBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{Binding (controls:ControlsHelper.CornerRadius),
                                                       Mode=OneWay,
                                                       RelativeSource={RelativeSource TemplatedParent}}"
                                IsHitTestVisible="False"
                                Opacity="0.6"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Visibility="Collapsed" />

                        <!--  AllowsTransparency="true" fixes the redraw problem under windows vista/7 with a selected non aero theme  -->
                        <Popup x:Name="PART_Popup"
                               AllowsTransparency="True"
                               Focusable="False"
                               IsOpen="{Binding IsDropDownOpen,
                                                RelativeSource={RelativeSource TemplatedParent}}"
                               Placement="Bottom"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                            <Grid Width="264.566929133858"
                                  Height="270"
                                  MinWidth="{Binding ActualWidth,
                                                     RelativeSource={RelativeSource TemplatedParent}}"
                                  Margin="10,66,242,0"
                                  VerticalAlignment="Top">
                                <Border x:Name="PopupBorder"
                                        Margin="0"
                                        Background="{DynamicResource WhiteBrush}"
                                        BorderBrush="{DynamicResource AccentColorBrush}"
                                        BorderThickness="1"
                                        Effect="{DynamicResource DropShadowBrush}">
                                    <Grid>
                                        <CheckBox x:Name="isCollection"
                                                  Height="Auto"
                                                  Margin="10,62,0,0"
                                                  HorizontalAlignment="Left"
                                                  VerticalAlignment="Top"
                                                  Content="Is Collection?"
                                                  IsChecked="{Binding PropertyType.IsCollection,
                                                                      Mode=TwoWay,
                                                                      UpdateSourceTrigger=PropertyChanged}" />
                                        <ComboBox Margin="10,85,10,0"
                                                  VerticalAlignment="Top"
                                                  IsEnabled="{Binding IsChecked,
                                                                      ElementName=isCollection}"
                                                  ItemsSource="{Binding PropertyType.GenericCollections}"
                                                  SelectedItem="{Binding PropertyType.SelectedCollectionType,
                                                                         Mode=TwoWay,
                                                                         UpdateSourceTrigger=PropertyChanged}" />
                                        <TextBlock Height="Auto"
                                                   Margin="10,10,0,0"
                                                   HorizontalAlignment="Left"
                                                   VerticalAlignment="Top"
                                                   Text="Type: " />
                                        <ComboBox Margin="10,31,10,0"
                                                  VerticalAlignment="Top"
                                                  ItemsSource="{Binding PropertyType.PrimitiveTypes}"
                                                  SelectedItem="{Binding PropertyType.SelectedType,
                                                                         Mode=TwoWay,
                                                                         UpdateSourceTrigger=PropertyChanged}" />
                                        <TextBlock Height="Auto"
                                                   Margin="10,121,0,0"
                                                   HorizontalAlignment="Left"
                                                   VerticalAlignment="Top"
                                                   Text="Access Modifier: " />
                                        <ComboBox Margin="104,116,10,0"
                                                  VerticalAlignment="Top"
                                                  ItemsSource="{Binding PropertyType.AccessModifiers}"
                                                  SelectedItem="{Binding PropertyType.SelectedAccessModifier,
                                                                         Mode=TwoWay,
                                                                         UpdateSourceTrigger=PropertyChanged}" />
                                        <CheckBox x:Name="withBackingField"
                                                  Height="26"
                                                  Margin="10,147,0,0"
                                                  HorizontalAlignment="Left"
                                                  VerticalAlignment="Top"
                                                  Content="With Backing Field?"
                                                  IsChecked="{Binding PropertyType.WithBackingField,
                                                                      Mode=TwoWay,
                                                                      UpdateSourceTrigger=PropertyChanged}" />
                                        <TextBox Margin="10,173,10,0"
                                                 VerticalAlignment="Top"
                                                 controls:TextBoxHelper.Watermark="_prefix"
                                                 IsEnabled="{Binding IsChecked,
                                                                     ElementName=withBackingField}"
                                                 Text="{Binding PropertyType.BackingFieldPrefix,
                                                                Mode=TwoWay,
                                                                UpdateSourceTrigger=PropertyChanged}" />
                                        <CheckBox x:Name="isINotify"
                                                  Height="26"
                                                  Margin="10,204,0,0"
                                                  HorizontalAlignment="Left"
                                                  VerticalAlignment="Top"
                                                  Content="INotifyPropertyChanged?"
                                                  IsChecked="{Binding PropertyType.WithNotifier,
                                                                      Mode=TwoWay,
                                                                      UpdateSourceTrigger=PropertyChanged}"
                                                  IsEnabled="{Binding IsChecked,
                                                                      ElementName=withBackingField}" />
                                        <TextBox Margin="10,230,10,0"
                                                 VerticalAlignment="Top"
                                                 controls:TextBoxHelper.Watermark="OnPropertyChanged"
                                                 IsEnabled="{Binding IsChecked,
                                                                     ElementName=isINotify}"
                                                 Text="{Binding PropertyType.NotifyMethodName,
                                                                Mode=TwoWay,
                                                                UpdateSourceTrigger=PropertyChanged}" />


                                    </Grid>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEditable" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource GrayBrush9}" />
                        </MultiTrigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="FocusBorder" Property="BorderBrush" Value="{Binding (controls:ControlsHelper.FocusBorderBrush), RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="FocusBorder" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter TargetName="FocusBorder" Property="BorderBrush" Value="{Binding (controls:ControlsHelper.FocusBorderBrush), RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="FocusBorder" Property="Visibility" Value="Visible" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="DisabledVisualElement" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VirtualisedMetroComboBox"
           BasedOn="{StaticResource MetroComboBox}"
           TargetType="{x:Type ComboBox}">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel IsItemsHost="True"
                                            KeyboardNavigation.DirectionalNavigation="Contained"
                                            VirtualizingPanel.IsVirtualizing="True"
                                            VirtualizingPanel.VirtualizationMode="Recycling" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Style.Triggers>
            <Trigger Property="IsGrouping" Value="True">
                <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MetroComboBoxItem" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="Background" Value="{DynamicResource WhiteBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Grid Margin="0 0.5" Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value=".55" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="ItemBackground"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                IsHitTestVisible="False"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <ContentPresenter x:Name="contentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          TextElement.Foreground="{TemplateBinding Foreground}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource AccentSelectedColorBrush}" />
                            <Setter TargetName="ItemBackground" Property="Background" Value="{DynamicResource AccentColorBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ItemBackground" Property="Background" Value="{DynamicResource AccentColorBrush2}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>